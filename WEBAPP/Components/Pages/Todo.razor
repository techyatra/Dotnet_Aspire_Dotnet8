@page "/todo"
@rendermode InteractiveServer
@inject ToDoService TodoService


<h3>To-Do List</h3>

<div class="input-group mb-3">
    <input @bind="newTodo" class="form-control" placeholder="Enter new to-do item" />
    <button @onclick="AddTodo" class="btn btn-primary">Add</button>

</div>
<ul class="list-group">
    @foreach (var todo in todos)
    {
        <li class="list-group-item d-flex justify-content-between align-items-center">
            @todo
            <button @onclick="() => DeleteTodo(todo)" class="btn btn-danger btn-sm">Delete</button>
        </li>

    }
</ul>


@code {
    private List<string> todos = new List<string>();
    private string newTodo;

    protected override async Task OnInitializedAsync()
    {
        await LoadTodos();
    }

    private async Task LoadTodos()
    {
        todos = await TodoService.GetToDosAsync();
    }
    private async Task AddTodo()
    {
        Console.WriteLine("Button clicked");
        if (!string.IsNullOrWhiteSpace(newTodo))
        {
            await TodoService.PostAsync(newTodo);
            await LoadTodos();
            newTodo = string.Empty;
        }
    }

    private async Task DeleteTodo(string todo)
    {
        Console.WriteLine("Button clicked");
        var index = todos.IndexOf(todo);
        if (index != -1)
        {
            await TodoService.DeleteAsync(index);
            await LoadTodos();
        }
    }
}